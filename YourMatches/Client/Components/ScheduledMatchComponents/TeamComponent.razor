@inject HttpClient _http;
@inject LogoDtoContainer _logos

<div class="team-container d-flex flex-column @_cssClass p-0 align">
    <div class="team-logo-container mx-auto mx-md-0">
        <img src="@_imageSource" alt="@Venue Team Logo" class="team-logo-image img-fluid" />
    </div>
    <span class="team-name d-flex px-2">
        @TeamName
    </span>
</div>

@code {
    [Parameter]
    public string TeamName { get; set; }
    [Parameter]
    public string Venue { get; set; }
    static string _unknownClubLogoSource = "css/blank-logo.svg";
    private string _imageSource = _unknownClubLogoSource;
    private string _cssClass;

    protected override async Task OnInitializedAsync()
    {
        _cssClass = Venue.ToLower() == "home" ? "flex-md-row" : "flex-md-row-reverse";

        //Query local logo container for searched logo
        var source = _logos.GetLogoSourceByClubName(TeamName);

        _imageSource = source == null ? _unknownClubLogoSource : source;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //If logo cannot be found localy, try to retrieve it from the server
            if (_imageSource == _unknownClubLogoSource)
            {
                var source = await GetLogoSourceFromServer();
                _imageSource = source == null ? _unknownClubLogoSource : source;
                StateHasChanged();
            }
        }
    }

    private async Task<string> GetLogoSourceFromServer()
    {
        try
        {
            var logo = await _http.GetFromJsonAsync<LogoDto>($"Logo/{TeamName}");
            _logos.AddLogo(logo);
            return logo.ImageSource;
        }
        catch
        {
            return null;
        }
    }
}

