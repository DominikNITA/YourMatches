@page "/"
@inject HttpClient Http
<LandingLogo></LandingLogo>
<h1>Hello, football man!</h1>
<FilterForm OnSubmitCallback="@GetMatches" Request="req"></FilterForm>

@if (matches == null)
{
    @:Loading Matches...
}
else
{
    <div class="container col-12">
        <div class="row justify-content-center">
            @foreach (var match in matches)
            {
                <ScheduledMatch Match="match"></ScheduledMatch>
            }
        </div>
    </div>
}

<SurveyPrompt Title="How is Blazor working for you?" />

@code{
    private List<ScheduledMatchDto> matches;
    protected RequestDto req = new RequestDto();


    protected override async Task OnInitializedAsync()
    {
        //matches = await Http.GetJsonAsync<List<ScheduledMatchDto>>("match");
        //req.LeaguesChecked.Add(League.GERMANY_1);
        //req.LeaguesChecked.Add(League.SPAIN_1);
        //req.LeaguesChecked.Add(League.ITALY_1);
        //req.LeaguesChecked.Add(League.ENGLAND_1);
        //req.LeaguesChecked.Add(League.FRANCE_1);
        //req.StatusChecked.Add(Status.FINISHED);
        //req.StatusChecked.Add(Status.IN_PLAY);
        //req.StatusChecked.Add(Status.SCHEDULED);
        //GetMatches();
        req.StartingDate = DateTime.Today.AddDays(2);
        req.EndingDate = DateTime.Today.AddDays(2);
    }

    protected async void GetMatches()
    {
        //TODO: Catch errors
        matches = new List<ScheduledMatchDto>();

        matches = await Http.PostJsonAsync<List<ScheduledMatchDto>>("match", req);
        StateHasChanged();
    }
}